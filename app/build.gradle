apply plugin: 'com.android.application'
apply plugin: 'bugly'

bugly {
    appId = 'ef48d6a01a'
    appKey = 'd4e77414-fa29-4beb-a003-1398230befbc'
    execute = 'true'
    upload = 'true'
//    outputDir = ''
}

android {

    signingConfigs {
        debug {
            storeFile file(DEBUG_KEYSTORE)
        }

        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_KEYSTORE)
            storePassword RELEASE_STORE_PASSWORD
        }

    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }
    defaultConfig {
        applicationId "cn.rongcloud.rtc"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 8
        versionName VERSION_APP_NAME

        testApplicationId "cn.rongcloud.rtc.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        // Enabling multidex support.
        multiDexEnabled true

        // bugly config
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a','x86'//, 'armeab', 'x86_64'
        }
    }
    buildTypes {

        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFile 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == 'release') {
                outputFileName = "${RELEASE_NAME}_release.apk"
            } else {
                outputFileName = "${RELEASE_NAME}_debug.apk"
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    	packagingOptions {
		exclude 'lib/armeabi/*.so'
		exclude 'lib/arm64-v8a/*.so'
		exclude 'lib/mips64/*.so'
		exclude 'lib/x86_64/*.so'
	}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:support-annotations:26.0.0"
    implementation "com.android.support:appcompat-v7:27.1.1"
    implementation "com.android.support:design:27.1.1"
    implementation "com.android.support:support-v4:27.1.1"
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //bugly
    api 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    api 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
//    implementation project(':RongRTCLib')
    api 'cn.rongcloud.sdk:im_lib:2.10.4'
    //api 'cn.rongcloud.rtclib:rtc_lib:3.2.0'
    api 'cn.rongcloud.sdk:im_kit:2.10.4'
    api project(':CallKit')
    implementation 'me.yokeyword:indexablerecyclerview:1.3.0'
    implementation 'com.github.duty-os:white-sdk-android:2.0.0-beta10'
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.2.0'
            }
        }
        if(requested.group == 'com.github.bumptech.glide'){
            details.useVersion '4.0.0'
        }
    }
}

def releaseTime() {
    return new Date().format("yyyyMMdd_HHmm")
}